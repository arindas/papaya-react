{"version":3,"sources":["assets/medical_image_preview.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","selectedFile","setSelectedFile","nonDicomImg","setNonDicomImg","params","useMemo","p","useEffect","window","papaya","Container","startPapaya","resetViewer","updateImage","useCallback","_event","preventDefault","type","startsWith","URL","createObjectURL","error","console","selectFile","e","target","files","handleURLExpired","onerror","src","medical_image_preview","style","id","class","hidden","alt","width","height","objectFit","onError","margin","onSubmit","fontFamily","required","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAAe,G,MAAA,IAA0B,mD,OC6E1BA,MAvEf,WACE,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEMC,EAASC,mBAAQ,WACrB,IAAMC,EAAI,GACV,OADcA,EAAC,WAAgB,EACxBA,IACN,IAEHC,qBAAU,WACRC,OAAOC,OAAOC,UAAUC,cACxBH,OAAOC,OAAOC,UAAUE,YAAY,EAAGR,KACtC,CAACA,IAEJ,IAAMS,EAAcC,uBAAY,SAACC,GAC/BA,EAAOC,iBAEHhB,EAAaiB,KAAKC,WAAW,SAC/Bf,GAAe,GAEfA,GAAe,GAGjB,IACEC,EAAM,OAAa,CAACe,IAAIC,gBAAgBpB,IACxCQ,OAAOC,OAAOC,UAAUE,YAAY,EAAGR,GACvC,MAAOiB,GACPC,QAAQD,MAAMA,MAEf,CAACjB,EAAQJ,IAENuB,EAAaT,uBACjB,SAACU,GAAD,OAAOvB,EAAgBuB,EAAEC,OAAOC,MAAM,MAAK,IAEvCC,EAAmBb,uBAAY,SAACU,GACpCA,EAAEC,OAAOG,QAAU,KACnBJ,EAAEC,OAAOI,IAAMC,IACd,IAEH,OACE,8BACE,sBAAKC,MAAO,CAAE,MAAS,QAAS,UAAa,QAA7C,UACE,qBAAKC,GAAG,gBAAgBC,MAAM,SAASC,OAAQhC,MAC5CF,KAAkBE,GAAe,qBAClCiC,IAAI,uBACJN,IAAKV,IAAIC,gBAAgBpB,GACzB+B,MAAO,CAAEK,MAAO,QAASC,OAAQ,QAASC,UAAW,WACrDC,QAASZ,IAGX,uBAEA,uBAAMI,MAAO,CAAES,OAAQ,QACrBC,SAAU5B,EADZ,UAEE,wBAAOkB,MAAO,CAAEW,WAAY,aAA5B,UACE,8CACA,uBACEC,UAAQ,EACR1B,KAAK,OACL2B,SAAUrB,OAEd,uBACA,wBAAQN,KAAK,SAASc,MAAO,CAAE,UAAa,QAA5C,sCCxDKc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7bc975e1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/medical_image_preview.a8d44f44.jpg\";","import React, { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport './App.css';\n\nimport medical_image_preview from './assets/medical_image_preview.jpg';\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [nonDicomImg, setNonDicomImg] = useState(false);\n\n  const params = useMemo(() => {\n    const p = []; p[\"kioskMode\"] = true;\n    return p;\n  }, [])\n\n  useEffect(() => {\n    window.papaya.Container.startPapaya();\n    window.papaya.Container.resetViewer(0, params);\n  }, [params]);\n\n  const updateImage = useCallback((_event) => {\n    _event.preventDefault();\n\n    if (selectedFile.type.startsWith(\"image\")) {\n      setNonDicomImg(true);\n    } else {\n      setNonDicomImg(false);\n    }\n\n    try {\n      params[\"images\"] = [URL.createObjectURL(selectedFile)];\n      window.papaya.Container.resetViewer(0, params);\n    } catch (error) {\n      console.error(error)\n    }\n  }, [params, selectedFile]);\n\n  const selectFile = useCallback(\n    (e) => setSelectedFile(e.target.files[0]), []);\n\n  const handleURLExpired = useCallback((e) => {\n    e.target.onerror = null; \n    e.target.src = medical_image_preview;\n  }, []);\n\n  return (\n    <div>\n      <div style={{ \"width\": \"800px\", \"marginTop\": \"10px\" }}>\n        <div id=\"papaya_viewer\" class=\"papaya\" hidden={nonDicomImg}></div>\n        {!!selectedFile && !!nonDicomImg && <img\n          alt=\"Medical file preview\"\n          src={URL.createObjectURL(selectedFile)}\n          style={{ width: \"800px\", height: \"600px\", objectFit: \"contain\" }}\n          onError={handleURLExpired}\n        />\n        }\n        <br />\n\n        <form style={{ margin: \"10px\" }}\n          onSubmit={updateImage}>\n          <label style={{ fontFamily: \"monospace\" }}>\n            <h3>Upload file:</h3>\n            <input\n              required\n              type=\"file\"\n              onChange={selectFile} />\n          </label>\n          <br />\n          <button type=\"submit\" style={{ \"marginTop\": \"10px\" }}>\n            Visualize image\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}